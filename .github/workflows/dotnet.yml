name: ObjectFactory

on:
  push:
    branches: [ main, build, releases/** ]
  pull_request:
    branches: [ main, releases/** ]
  # workflow_dispatch: allows manually kicking off a build
  workflow_dispatch:

defaults:
  run:
    shell: pwsh

jobs:
  buildAndDeploy:

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
      max-parallel: 3
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Dump Environment
      run: |
       $PSVersionTable
       gci env: | ft -wrap

    - name: Create GitHub NuGet Source
      run: |
       dotnet nuget add source --username $env:GITHUB_REPOSITORY_OWNER --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/$($env:GITHUB_REPOSITORY_OWNER.ToLower())/index.json"

    - name: Determine Version
      run: |
        if ('${{ github.ref }}' -match ".*/v{0,1}(?<ver>\d\.\d\.\d)(?:-(?<prerelease>[0-9a-z]+)(?<rest>.*))?" `
            -and (!$matches['rest'] -or !$matches['rest'].StartsWith('-'))) {
            $newVersion = $matches['ver']
        } else {
            $newVersion = "1.0.$env:GITHUB_RUN_NUMBER"
        }
        "Version=$newVersion"
        "Version=$newVersion" | Out-File -FilePath $env:GITHUB_ENV -Append

    - name: Do CI Build and Test
      run: |
        ./run.ps1 ci -Version $Version
      env:
       Version: ${{ env.Version }}

    - name: Upload to CodeCov
      if: ${{ matrix.os == 'ubuntu-latest'}}
      shell: bash
      working-directory: tests/ObjectFactoryTests/unit
      run: |
        export CODECOV_TOKEN="${{ secrets.CODECOV }}"
        bash <(curl -s https://codecov.io/bash)

    - name: Publish to GitHub NuGet
      if: startsWith(github.ref, 'refs/heads/releases/') && matrix.os == 'ubuntu-latest'
      run: |
       "Publishing ./packages/Seekatar.Tools.$Version.nupkg"
       dotnet nuget push "./packages/Seekatar.Tools.$Version.nupkg" --api-key ${{ secrets.NUGET_PAT }} --source "github"
      env:
       Version: ${{ env.Version }}